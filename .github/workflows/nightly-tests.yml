name: Nightly Tests

on:
  schedule:
    # Run at 2 AM UTC every day
    - cron: '0 2 * * *'
  workflow_dispatch:

jobs:
  stress-tests:
    name: Stress Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore --configuration Release

    - name: Run Stress Tests
      run: |
        echo "Running stress tests..."
        dotnet test --no-build --configuration Release --filter "FullyQualifiedName~Stress|FullyQualifiedName~Endurance|FullyQualifiedName~LargeDataset" --logger "console;verbosity=normal"
      timeout-minutes: 120
      continue-on-error: true

    - name: Run Memory Usage Tests
      run: |
        echo "Running memory usage tests..."
        dotnet test --no-build --configuration Release --filter "FullyQualifiedName~MemoryUsage" --logger "console;verbosity=normal"
      timeout-minutes: 60
      continue-on-error: true

    - name: Run Corruption Recovery Tests
      run: |
        echo "Running corruption recovery tests..."
        dotnet test --no-build --configuration Release --filter "FullyQualifiedName~Corruption|FullyQualifiedName~Recovery" --logger "console;verbosity=normal"
      timeout-minutes: 60
      continue-on-error: true

  long-running-tests:
    name: Long Running Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore --configuration Release

    - name: Run Real World Scenario Tests
      run: |
        echo "Running real world scenario tests..."
        dotnet test --no-build --configuration Release --filter "FullyQualifiedName~RealWorld|FullyQualifiedName~Scenario" --logger "console;verbosity=normal"
      timeout-minutes: 180
      continue-on-error: true

  all-tests-full:
    name: All Tests (Full Suite)
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore --configuration Release

    - name: Run All Tests
      run: dotnet test --no-build --configuration Release --logger "console;verbosity=normal" --logger "trx;LogFileName=nightly-test-results.trx"
      timeout-minutes: 240

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: nightly-test-results-${{ matrix.os }}
        path: |
          **/*.trx
          **/TestResults/

  report:
    name: Nightly Report
    runs-on: ubuntu-latest
    needs: [stress-tests, long-running-tests, all-tests-full]
    if: always()
    
    steps:
    - name: Create nightly report
      run: |
        echo "# EmailDB Nightly Test Report" >> $GITHUB_STEP_SUMMARY
        echo "Date: $(date -u +%Y-%m-%d)" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "## Test Suite Results" >> $GITHUB_STEP_SUMMARY
        echo "- Stress Tests: ${{ needs.stress-tests.result }}" >> $GITHUB_STEP_SUMMARY
        echo "- Long Running Tests: ${{ needs.long-running-tests.result }}" >> $GITHUB_STEP_SUMMARY
        echo "- Full Test Suite: ${{ needs.all-tests-full.result }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "## Test Categories Run" >> $GITHUB_STEP_SUMMARY
        echo "- ✓ Stress & Endurance Tests" >> $GITHUB_STEP_SUMMARY
        echo "- ✓ Large Dataset Tests" >> $GITHUB_STEP_SUMMARY
        echo "- ✓ Memory Usage Tests" >> $GITHUB_STEP_SUMMARY
        echo "- ✓ Corruption Recovery Tests" >> $GITHUB_STEP_SUMMARY
        echo "- ✓ Real World Scenarios" >> $GITHUB_STEP_SUMMARY
        echo "- ✓ Full Test Suite (All Platforms)" >> $GITHUB_STEP_SUMMARY